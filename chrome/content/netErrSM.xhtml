<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html [
  <!ENTITY % htmlDTD PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "DTD/xhtml1-strict.dtd">
  %htmlDTD;
  <!ENTITY % netErrorDTD SYSTEM "chrome://global/locale/netError.dtd">
  %netErrorDTD;
  <!ENTITY % ffDummyDTD SYSTEM "chrome://fierr/content/ffDummy.dtd">
  %ffDummyDTD;
  <!ENTITY % globalDTD SYSTEM "chrome://global/locale/global.dtd">
  %globalDTD;
  <!ENTITY % localeDTD SYSTEM "chrome://fierr/locale/netError.dtd">
  %localeDTD;
]>
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <title>&loadError.label;</title>
<style type="text/css">
<![CDATA[
body
{
 margin: 0;
 padding: 0 1em;
 color: [COLOR_FOREGROUND];
 font: message-box;
 background: [COLOR_BACKGROUND] url(data:[IMAGE_BACKGROUND_MIME];base64,[IMAGE_BACKGROUND]) [BACKGROUND_X] [BACKGROUND_Y] no-repeat fixed;
 position: relative;
 margin: 0;
 padding: 0;
}
h1
{
 margin: 0 0 .6em 0;
 border-bottom: 1px solid [COLOR_UNDERLINE];
 font-size: 160%;
}
ul, ol
{
 margin: 0;
 -moz-margin-start: 1.5em;
 padding: 0;
}
ul > li, ol > li
{
 margin-bottom: .5em;
}
ul
{
 list-style: square;
}
#errorPageContainer
{
 background: [COLOR_BACKGROUND] no-repeat fixed;
 opacity: 0.65;
/* min-width: 550px; */
 max-width: [CONTAINER_WIDTH];
 position: absolute;
 top: [CONTAINER_TOP];
 left: [CONTAINER_LEFT];
 right: [CONTAINER_RIGHT];
 color: [COLOR_FOREGROUND];
 font: 13px Verdana, sans-serif;
 padding: 10px;
 border: 2px solid;
 border-top-color: [COLOR_BORDER_TL];
 border-left-color: [COLOR_BORDER_TL];
 border-right-color: [COLOR_BORDER_BR];
 border-bottom-color: [COLOR_BORDER_BR];
}
#errorTitle
{
 -moz-margin-start: 80px;
}
#errorLongContent
{
 -moz-margin-start: 80px;
}
#errorShortDesc > p
{
 overflow: auto;
 border-bottom: 1px solid [COLOR_UNDERLINE];
 padding-bottom: 1em;
 font-size: 130%;
 white-space: pre-wrap;
}
#errorLongDesc
{
 -moz-padding-end: 3em;
 font-size: 110%;
}
#errorLongDesc > p
{
 white-space: pre-wrap;
}
#errButtons
{
 -moz-margin-start: 80px;
 line-height: 4em;
}
#errButtons > button
{
 margin-right: 1em;
}
#errorContainer
{
 display: none;
}
button
{
 min-width: 100px;
 max-width: 300px;
 font-weight: bold;
 padding: 2px;
}
button img
{
 vertical-align: top;
 padding-right: 3px;
}
@media(max-width: 640px)
{
 #errorPageContainer
 {
  left: 25px;
 }
}
@media(max-width: 800px)
{
 #errorTitle
 {
  -moz-margin-start: 20px;
 }
 #errorLongContent
 {
  -moz-margin-start: 20px;
 }
 #errButtons
 {
  -moz-margin-start: 20px;
 }
 #errorLongDesc
 {
  -moz-padding-end: 1em;
 }
}
]]>
</style>
 <link rel="icon" type="image/png" id="favicon" href="chrome://global/skin/icons/warning-16.png"/>
 <script type="application/x-javascript">
  var localeFierr =
  {
   errStopReload: '&errStopReload.label;',
   errReloading:  '&errReloading.label;'
  };<![CDATA[
var Fierr_PageScript =
{
 _DefaultTime: 10,
 _TimerID: 0,
 _Seconds: 0,
 _errStopReload: localeFierr.errStopReload,
 _errReloading: localeFierr.errReloading,
 _getErrorCode: function()
 {
  var url = document.documentURI;
  var error = url.search(/e\=/);
  var duffUrl = url.search(/\&u\=/);
  return decodeURIComponent(url.slice(error + 2, duffUrl));
 },
 _getCSSClass: function()
 {
  var url = document.documentURI;
  var matches = url.match(/s\=([^&]+)\&/);
  if (!matches || matches.length < 2)
   return '';
  return decodeURIComponent(matches[1]);
 },
 _getOriginalPage: function(noEnd)
 {
  var location = window.content.location.href;
  if (noEnd==true)
  {
   var parts = location.split('#');
   return parts[0];
  }
  else
  {
   return location;
  }
 },
 reloadPage: function()
 {
  Fierr_PageScript.stopReload();
  try
  {
   location.reload();
  }
  catch (e)
  {
  }
 },
 stopReload: function()
 {
  var cmdStop = document.getElementById('tryStop');
  if (cmdStop)
  {
   clearTimeout(Fierr_PageScript._TimerID);
   cmdStop.parentNode.removeChild(cmdStop);
   Fierr_PageScript._Seconds = Fierr_PageScript._DefaultTime;
  }
 },
 backPage: function()
 {
  Fierr_PageScript.stopReload();
  history.back();
 },
 googlePage: function()
 {
  Fierr_PageScript.stopReload();
  window.content.location.href = 'http://www.google.com/search?q=' + Fierr_PageScript._getOriginalPage(false);
 },
 isupPage: function()
 {
  Fierr_PageScript.stopReload();
  window.content.location.href = 'http://isup.me/' + Fierr_PageScript._getOriginalPage(true);
 },
 goOnline: function()
 {
  var sTemp = window.content.location.href;
  window.content.location.href = 'http://go.online/' + encodeURIComponent(sTemp);
 },
 _getDescription: function()
 {
  var url = document.documentURI;
  var desc = url.search(/d\=/);
  if (desc === -1)
   return '';
  return decodeURIComponent(url.slice(desc + 2));
 },
 initPage: function()
 {
  var err = Fierr_PageScript._getErrorCode();
  var errTitle = document.getElementById('et_' + err);
  var errDesc  = document.getElementById('ed_' + err);
  if (!errTitle || !errDesc)
  {
   errTitle = document.getElementById('et_generic');
   errDesc  = document.getElementById('ed_generic');
  }
  var title = document.getElementById('errorTitleText');
  if (title)
  {
   title.parentNode.replaceChild(errTitle, title);
   errTitle.id = 'errorTitleText';
  }
  var sd = document.getElementById('errorShortDescText');
  if (sd)
   sd.textContent = Fierr_PageScript._getDescription();
  var ld = document.getElementById('errorLongDesc');
  if (ld)
  {
   ld.parentNode.replaceChild(errDesc, ld);
   errDesc.id = 'errorLongDesc';
  }
  if (err !== 'netOffline')
  {
   var cmdOnline = document.getElementById('tryOn');
   cmdOnline.parentNode.removeChild(cmdOnline);
   Fierr_PageScript._Seconds = Fierr_PageScript._DefaultTime;
  }
  else
  {
   var cmdSearch = document.getElementById('tryGoogle');
   cmdSearch.parentNode.removeChild(cmdSearch);
  }
  var cmdStop = document.getElementById('tryStop');
  var lblStop = document.getElementById('lblStop');
  if(err === 'connectionFailure' || err === 'netTimeout' ||
     err === 'netReset' || err === 'netInterrupt' ||
     err === 'proxyResolveFailure' || err === 'proxyConnectFailure' ||
     err === 'dnsNotFound')
  {
   lblStop.textContent = Fierr_PageScript._errStopReload + ' (' + Fierr_PageScript._Seconds + ')';
   Fierr_PageScript._TimerID = setTimeout(Fierr_PageScript.UpdateTimer, 1000);
  }
  else
  {
   cmdStop.parentNode.removeChild(cmdStop);
  }
  var errContainer = document.getElementById('errorContainer');
  errContainer.parentNode.removeChild(errContainer);
  var className = Fierr_PageScript._getCSSClass();
  if (className === 'expertBadCert')
  {
   Fierr_PageScript.showSecuritySection();
  }
  if (err === 'nssBadCert')
  {
   document.getElementById('tryAgain').style.display = 'none';
   document.getElementById('errorPageContainer').setAttribute('class', 'certerror');
   Fierr_PageScript._addDomainErrorLink();
  }
  else
  {
   var secOverride = document.getElementById('securityOverrideDiv');
   secOverride.parentNode.removeChild(secOverride);
  }
 },
 _addDomainErrorLink: function()
 {
  var sd = document.getElementById('errorShortDescText');
  if (sd)
   sd.textContent = Fierr_PageScript._getDescription();
  var link = document.getElementById('cert_domain_link');
  if (!link)
   return;
  var okHost = link.getAttribute('title');
  var thisHost = document.location.hostname;
  var proto = document.location.protocol;
  okHost = okHost.replace(/^\*\./, 'www.');
  if (Fierr_PageScript._endsWith(okHost, '.' + thisHost))
   link.href = proto + okHost;
  if (Fierr_PageScript._endsWith(thisHost, '.' + okHost))
   link.href = proto + okHost;
 },
 _endsWith: function(haystack, needle)
 {
  return haystack.slice(-needle.length) === needle;
 },
 UpdateTimer: function()
 {
  if (Fierr_PageScript._TimerID)
  {
   clearTimeout(Fierr_PageScript._TimerID);
   Fierr_PageScript._TimerID = 0;
  }
  Fierr_PageScript._Seconds--;
  var cmdStop = document.getElementById('tryStop');
  var lblStop = document.getElementById('lblStop');
  if (Fierr_PageScript._Seconds === 0)
  {
   lblStop.textContent = Fierr_PageScript._errReloading;
   cmdStop.disabled = true;
   Fierr_PageScript._Seconds = Fierr_PageScript._DefaultTime;
   Fierr_PageScript.reloadPage();
  }
  else
  {
   cmdStop.disabled = false;
   lblStop.textContent = Fierr_PageScript._errStopReload + ' (' + Fierr_PageScript._Seconds + ')';
   Fierr_PageScript._TimerID = setTimeout(Fierr_PageScript.UpdateTimer, 1000);
  }
 },
 showSecuritySection: function()
 {
  document.getElementById('securityOverrideContent').style.display = '';
  document.getElementById('securityOverrideLink').style.display = 'none';
 }
};
 ]]></script>
 </head>
 <body dir="&locale.dir;" style="overflow: hidden;">
  <div id="errorContainer">
   <div id="errorTitlesContainer">
    <h1 id="et_generic">&generic.title;</h1>
    <h1 id="et_dnsNotFound">&dnsNotFound.title;</h1>
    <h1 id="et_fileNotFound">&fileNotFound.title;</h1>
    <h1 id="et_malformedURI">&malformedURI.title;</h1>
    <h1 id="et_protocolNotFound">&protocolNotFound.title;</h1>
    <h1 id="et_unknownProtocolFound">&unknownProtocolFound.title;</h1>
    <h1 id="et_connectionFailure">&connectionFailure.title;</h1>
    <h1 id="et_netTimeout">&netTimeout.title;</h1>
    <h1 id="et_redirectLoop">&redirectLoop.title;</h1>
    <h1 id="et_unknownSocketType">&unknownSocketType.title;</h1>
    <h1 id="et_netReset">&netReset.title;</h1>
    <h1 id="et_notCached">&notCached.title;</h1>
    <h1 id="et_netOffline">&netOffline.title;</h1>
    <h1 id="et_netInterrupt">&netInterrupt.title;</h1>
    <h1 id="et_deniedPortAccess">&deniedPortAccess.title;</h1>
    <h1 id="et_proxyResolveFailure">&proxyResolveFailure.title;</h1>
    <h1 id="et_proxyConnectFailure">&proxyConnectFailure.title;</h1>
    <h1 id="et_contentEncodingError">&contentEncodingError.title;</h1>
    <h1 id="et_unsafeContentType">&unsafeContentType.title;</h1>
    <h1 id="et_nssFailure2">&nssFailure2.title;</h1>
    <h1 id="et_nssBadCert">&nssBadCert.title;</h1>
    <h1 id="et_malwareBlocked">&malwareBlocked.title;</h1>
    <h1 id="et_cspFrameAncestorBlocked">&cspFrameAncestorBlocked.title;</h1>
    <h1 id="et_remoteXUL">&remoteXUL.title;</h1>
    <h1 id="et_corruptedContentError">&corruptedContentError.title;</h1>
   </div>
   <div id="errorDescriptionsContainer">
    <div id="ed_generic">&generic.longDesc;</div>
    <div id="ed_dnsNotFound">&dnsNotFound.longDesc;</div>
    <div id="ed_fileNotFound">&fileNotFound.longDesc;</div>
    <div id="ed_malformedURI">&malformedURI.longDesc;</div>
    <div id="ed_protocolNotFound">&protocolNotFound.longDesc;</div>
    <div id="ed_unknownProtocolFound">&unknownProtocolFound.longDesc;</div>
    <div id="ed_connectionFailure">&connectionFailure.longDesc;</div>
    <div id="ed_netTimeout">&netTimeout.longDesc;</div>
    <div id="ed_redirectLoop">&redirectLoop.longDesc;</div>
    <div id="ed_unknownSocketType">&unknownSocketType.longDesc;</div>
    <div id="ed_netReset">&netReset.longDesc;</div>
    <div id="ed_notCached">&notCached.longDesc;</div>
    <div id="ed_netOffline">&netOffline.longDesc;</div>
    <div id="ed_netInterrupt">&netInterrupt.longDesc;</div>
    <div id="ed_deniedPortAccess">&deniedPortAccess.longDesc;</div>
    <div id="ed_proxyResolveFailure">&proxyResolveFailure.longDesc;</div>
    <div id="ed_proxyConnectFailure">&proxyConnectFailure.longDesc;</div>
    <div id="ed_contentEncodingError">&contentEncodingError.longDesc;</div>
    <div id="ed_unsafeContentType">&unsafeContentType.longDesc;</div>
    <div id="ed_nssFailure2">&nssFailure2.longDesc;</div>
    <div id="ed_nssBadCert">&nssBadCert.longDesc2;</div>
    <div id="ed_malwareBlocked">&malwareBlocked.longDesc;</div>
    <div id="ed_cspFrameAncestorBlocked">&cspFrameAncestorBlocked.longDesc;</div>
    <div id="ed_remoteXUL">&remoteXUL.longDesc;</div>
    <div id="ed_corruptedContentError">&corruptedContentError.longDesc;</div>
   </div>
  </div>
  <div id="errorPageContainer">
   <div id="errorTitle">
    <h1 id="errorTitleText" />
   </div>
   <div id="errorLongContent">
    <div id="errorShortDesc">
     <p id="errorShortDescText" />
    </div>
    <div id="errorLongDesc" />
    <div id="securityOverrideDiv">
     <a id="securityOverrideLink" href="javascript:Fierr_PageScript.showSecuritySection();">&securityOverride.linkText;</a>
     <div id="securityOverrideContent" style="display: none;">&securityOverride.warningText;</div>
     <br />
    </div>
   </div>
   <div id="errButtons">
    <button type="button" id="tryBack"   onclick="Fierr_PageScript.backPage();"><img src="data:[IMAGE_BUTTON_BACK_MIME];base64,[IMAGE_BUTTON_BACK]" alt="" title="&errBack.label;" />&errBack.label;</button>
    <button type="button" id="tryAgain"  onclick="Fierr_PageScript.reloadPage();"><img src="data:[IMAGE_BUTTON_RELOAD_MIME];base64,[IMAGE_BUTTON_RELOAD]" alt="" title="&errReload.label;" />&errReload.label;</button>
    <button type="button" id="tryIsUp"   onclick="Fierr_PageScript.isupPage();"><img src="data:[IMAGE_BUTTON_STATUS_MIME];base64,[IMAGE_BUTTON_STATUS]" alt="" title="&errIsUp.label;" />&errIsUp.label;</button>
    <button type="button" id="tryGoogle" onclick="Fierr_PageScript.googlePage();"><img src="data:[IMAGE_BUTTON_SEARCH_MIME];base64,[IMAGE_BUTTON_SEARCH]" alt="" title="&errSearch.label;" />&errSearch.label;</button>
    <button type="button" id="tryOn"     onclick="Fierr_PageScript.goOnline();"><img src="data:[IMAGE_BUTTON_GO_ONLINE_MIME];base64,[IMAGE_BUTTON_GO_ONLINE]" alt="" title="&errGoOnline.label;" />&errGoOnline.label;</button>
    <button type="button" id="tryStop"   onclick="Fierr_PageScript.stopReload();"><img src="data:[IMAGE_BUTTON_STOP_RELOAD_MIME];base64,[IMAGE_BUTTON_STOP_RELOAD]" alt="" title="&errStopReload.label;" /><span id="lblStop">&errStopReload.label;</span></button>
   </div>
  </div>
  <script type="application/x-javascript">Fierr_PageScript.initPage();</script>
 </body>
</html>
